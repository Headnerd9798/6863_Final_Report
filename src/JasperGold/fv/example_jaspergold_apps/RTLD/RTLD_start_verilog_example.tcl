# ----------------------------------------
#  Copyright (c) 2017 Cadence Design Systems, Inc. All Rights
#  Reserved.  Unpublished -- rights reserved under the copyright laws of
#  the United States.
# ----------------------------------------

# The steps in this example correspond to the typical GUI interaction
# you would have with JasperGold RTLD App when starting analysis of a new RTL.
# ----------------------------------------

#
# e.g. on loading in the design
# GUI: "File -> Default Analysis Setup Script -> Suggest... " drop-down menu
#
auto_setup -sv -path ../designs/reference_design/verilog_sva/source \
  -top_file ../designs/reference_design/verilog_sva/source/design/top.v

#
# e.g. on analyzing structural information and setting it as the baseline
# GUI: "Application -> Structural Analysis -> Compute Latest Structrual Information" drop-down menu
#
database -structural_analysis -batch
database -structural_analysis -set_baseline

#
# When saving traces, only the target's COI is saved.
# Use "set_trace_optimization standard" before running Visualize to save values for the full design.
# In this example, the related warning message is disabled.
#
set_message -disable WVS028

#
# e.g. on analyzing some behaviors from the RTL source browser
# GUI: Right-click menu item "Visualize -> Visualize Line" on the Left-Hand-Side of a
# delayed assignment in the source code browser
# GUI: "Capture Recipe" icon, last toolbar icon at the top-right corner of the waveform viewer
#
visualize -line {arb.shift[3:0]} 230 -column 34 -instance arb -file ../designs/reference_design/verilog_sva/source/design/arbiter.v
database -set_focus 0
visualize -save_recipe {Visualizing line 230 in arbiter.v} -task <embedded> -save_signal_order -save_behavior \
-description {This is a recipe visualizing the behavior (arb.shift == 4'b1000) && ~arb.req_rr_d[0] && ~arb.req_rr_d[1] && ~arb.req_rr_d[2] && arb.req_rr_d[3]} -batch

#
# e.g. on capturing an interesting event in the waveform as a Behavior element in the database
# GUI: "Capture Behavior" icon, second toolbar icon from the last at the top-right corner of the waveform viewer
#
database -set_focus 0
cover -name <embedded>::Transfer_Start {(arb.trans_started == 1'b0) ##1 (arb.trans_started == 1'b1)} \
-label {Transfer Start} -annotation {A transfer is starting.} -update_db

#
# e.g. on analyzing the interaction between a previously indexed behavior and new behavior
# GUI: Right-click menu item "Visualize -> Visualize Line" on the Left-Hand-Side of a delayed assignment in the
# source code browser
# GUI: Drag-and-drop behavior from the Indexed Behaviors table to the recipe constraints list on the right-hand
# side of the waveform viewer
# GUI: "Replot" icon in the middle of the toolbar at the top of the waveform viewer
# GUI: "Capture Recipe" icon, last toolbar icon at the top-right corner of the waveform viewer
#
visualize -line {arb.shift[3:0]} 229 -column 34 -instance arb -file ../designs/reference_design/verilog_sva/source/design/arbiter.v
visualize -at_least_once -property "<embedded>::behavior:0"
visualize -replot
database -set_focus 0
visualize -save_recipe {Visualizing lines 229 and 230 in arbiter.v} -task <embedded> \
-save_signal_order -save_behavior \
-description {This is a recipe mixing previously indexed behavior with new behavior.} -batch

#
# e.g. on exploring an FSM
# GUI: "Set Visualize Options" icon in the middle of the toolbar at the top of the waveform viewer
# GUI: Right-click menu item "Explore Signal in Current Session" of a signal element in the database
# GUI: "Capture Recipe" icon, last toolbar icon at the top-right corner of the waveform viewer
#
visualize -clear_all
visualize -max_length 20
visualize -explore eg.cur_state
database -set_focus 0
visualize -save_recipe "Exploring main FSM" -task <embedded> -save_signal_order -save_behavior \
-description "Recipe generated by auto-exploration." -batch

#
# e.g. on wrapping up and saving the database
# GUI: "Application -> Behavioral Analysis" drop-down menu
# GUI: "File -> Save Database" drop-down menu
#
database -behavioral_analysis -set_baseline
save -jdb [get_proj_dir]/example.jdb -capture_setup
